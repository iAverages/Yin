import Snowflake from "../../Snowflake";
import { defineSnowflake } from "../../utils/definer";

export interface GuideObject {
    id: string;
    name: string;
    icon: string | null;
    icon_hash?: string | null;
    splash: string | null;
    discovery_splash: string | null;
    owner?: boolean;
    owner_id: string;
    permissions?: string;
    region?: string | null;
    afk_channel_id: string | null;
    afk_timeout: number;
    widget_enabled?: boolean;
    widget_channel_id?: string | null;
    verification_level: number;
    default_message_notifications: number;
    explicit_content_filter: number;
    roles: Array<object>;
    emojis: Array<object>;
    features: Array<object>;
    mfa_level: number;
    application_id: string | null;
    system_channel_id: string | null;
    system_channel_flags: number;
    rules_channel_id: string | null;
    max_presences?: number | null;
    max_members?: number;
    vanity_url_code: string | null;
    description: string | null;
    banner: string | null;
    premium_tier: number;
    premium_subscription_count?: number;
    preferred_locale: string;
    public_updates_channel_id: string | null;
    max_video_channel_users?: number;
    approximate_member_count?: number;
    approximate_presence_count?: number;
    welcome_screen?: object;
    nsfw_level: number;
    stickers?: Array<object>;
    premium_progress_bar_enabled: boolean;
}

export class Guild {
    public readonly id: Snowflake;
    public readonly name: string;
    public readonly icon: string | null;
    public readonly iconHash?: string | null;
    public readonly splash: string | null;
    public readonly discoverySplash: string | null;
    public readonly owner?: boolean;
    public readonly ownerId: Snowflake;
    public readonly permissions?: string;
    public readonly region?: string | null;
    public readonly afkChannelId: Snowflake | null;
    public readonly afkTimeout: number;
    public readonly widgetEnabled?: boolean;
    public readonly widgetChannelId?: Snowflake | null;
    public readonly verificationLevel: number;
    public readonly defaultMessageNotifications: number;
    public readonly explicitContentFilter: number;
    public readonly roles: Array<object>;
    public readonly emojis: Array<object>;
    public readonly features: Array<object>;
    public readonly mfaLevel: number;
    public readonly applicationId: Snowflake | null;
    public readonly systemChannelId: Snowflake | null;
    public readonly systemChannelFlags: number;
    public readonly rulesChannelId: Snowflake | null;
    public readonly maxPresences?: number | null;
    public readonly maxMembers?: number;
    public readonly vanityUrlCode: string | null;
    public readonly description: string | null;
    public readonly banner: string | null;
    public readonly premiumTier: number;
    public readonly premiumSubscriptionCount?: number;
    public readonly preferredLocale: string;
    public readonly publicUpdatesChannelId: Snowflake | null;
    public readonly maxVideoChannelUsers?: number;
    public readonly approximateMemberCount?: number;
    public readonly approximatePresenceCount?: number;
    public readonly welcomeScreen?: object;
    public readonly nsfwLevel: number;
    public readonly stickers?: Array<object>;
    public readonly premiumProgressBarEnabled: boolean;

    constructor(packet: GuideObject) {
        this.id = new Snowflake(packet.id);
        this.name = packet.name;
        this.icon = packet.icon;
        this.iconHash = packet.icon_hash;
        this.splash = packet.splash;
        this.discoverySplash = packet.discovery_splash;
        this.owner = packet.owner;
        this.ownerId = new Snowflake(packet.owner_id);
        this.permissions = packet.permissions;
        this.region = packet.region;
        this.afkChannelId = defineSnowflake(packet.afk_channel_id);
        this.afkTimeout = packet.afk_timeout;
        this.widgetEnabled = packet.widget_enabled;
        this.widgetChannelId = defineSnowflake(packet.widget_channel_id);
        this.verificationLevel = packet.verification_level;
        this.defaultMessageNotifications = packet.default_message_notifications;
        this.explicitContentFilter = packet.explicit_content_filter;
        this.roles = packet.roles;
        this.emojis = packet.emojis;
        this.features = packet.features;
        this.mfaLevel = packet.mfa_level;
        this.applicationId = defineSnowflake(packet.application_id);
        this.systemChannelId = defineSnowflake(packet.system_channel_id);
        this.systemChannelFlags = packet.system_channel_flags;
        this.rulesChannelId = defineSnowflake(packet.rules_channel_id);
        this.maxPresences = packet.max_presences;
        this.maxMembers = packet.max_members;
        this.vanityUrlCode = packet.vanity_url_code;
        this.description = packet.description;
        this.banner = packet.banner;
        this.premiumTier = packet.premium_tier;
        this.premiumSubscriptionCount = packet.premium_subscription_count;
        this.preferredLocale = packet.preferred_locale;
        this.publicUpdatesChannelId = defineSnowflake(packet.public_updates_channel_id);
        this.maxVideoChannelUsers = packet.max_video_channel_users;
        this.approximateMemberCount = packet.approximate_member_count;
        this.approximatePresenceCount = packet.approximate_presence_count;
        this.welcomeScreen = packet.welcome_screen;
        this.nsfwLevel = packet.nsfw_level;
        this.stickers = packet.stickers;
        this.premiumProgressBarEnabled = packet.premium_progress_bar_enabled;
    }
}
