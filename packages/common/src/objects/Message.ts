// import Snowflake from "../discord/Snowflake";

import { defineSnowflake } from "../utils/definer";
import { User, UserDiscordObject } from "./User";

export interface MessagePacket {
    id: string;
    channel_id: string;
    author: UserDiscordObject;
    content: string;
    timestamp: string;
    edited_timestamp: string;
    tts: boolean;
    mention_everyone: boolean;
    mentions: Array<UserDiscordObject>; // TODO: chanage to Array<user>
    mention_roles: Array<Object>; // TODO: chanage to Array<roles>
    mention_channels?: Array<Object>; // TODO: chanage to Array<mention channels>
    attachments: Array<Object>; // TODO: chanage to Array<attachments>
    embeds: Array<Object>; // TODO: chanage to Array<embeds>
    reactions?: Array<Object>; // TODO: chanage to Array<reactions>
    nonce?: number | string;
    pinned: boolean;
    webhook_id?: string;
    type: number;
    activity?: Object; // TODO: Change to message activity
    application?: Partial<Object>; // TODO: Change to application
    application_id?: string;
    message_reference?: Object; // TODO: Change to message reference
    flags?: number;
    referenced_message?: Message;
    interaction?: Object; // TODO: Change to message interaction Object
    thread?: Object; // TODO: Change to channel
    components?: Array<Object>; // TODO: Change to component
    sticker_items?: Array<Object>; // TODO: Change to message sticker items
    stickers?: Array<Object>; // TODO: Change to stickers
}

export class Message {
    public readonly id: string;
    public readonly channel_id: string;
    public readonly author: User;
    public readonly content: string;
    public readonly timestamp: Date;
    public readonly editedTimestamp: Date;
    public readonly tts: boolean;
    public readonly mentionEveryone: boolean;
    public readonly mentions: Array<User>;
    public readonly mentionRoles: Array<Object>; // TODO: chanage to Array<roles>
    public readonly mentionChannels?: Array<Object>; // TODO: chanage to Array<mention channels>
    public readonly attachments: Array<Object>; // TODO: chanage to Array<attachments>
    public readonly embeds: Array<Object>; // TODO: chanage to Array<embeds>
    public readonly reactions?: Array<Object>; // TODO: chanage to Array<reactions>
    public readonly nonce?: number | string;
    public readonly pinned: boolean;
    public readonly webhookId?: string | null;
    public readonly type: number;
    public readonly activity?: Object; // TODO: Change to message activity
    public readonly application?: Partial<Object>; // TODO: Change to application
    public readonly applicationId?: string | null;
    public readonly messageReference?: Object; // TODO: Change to message reference
    public readonly flags?: number;
    public readonly referencedMessage?: Message;
    public readonly interaction?: Object; // TODO: Change to message interaction Object
    public readonly thread?: Object; // TODO: Change to channel
    public readonly components?: Array<Object>; // TODO: Change to component
    public readonly stickerItems?: Array<Object>; // TODO: Change to message sticker items
    public readonly stickers?: Array<Object>; // TODO: Change to stickers

    constructor(packet: MessagePacket) {
        this.id = packet.id;
        this.channel_id = packet.channel_id;
        this.author = new User(packet.author);
        this.content = packet.content;
        this.timestamp = new Date(packet.timestamp);
        this.editedTimestamp = new Date(packet.edited_timestamp);
        this.tts = packet.tts;
        this.mentionEveryone = packet.mention_everyone;
        this.mentions = packet.mentions;
        this.mentionRoles = packet.mention_roles;
        this.mentionChannels = packet.mention_channels;
        this.attachments = packet.attachments;
        this.embeds = packet.embeds;
        this.reactions = packet.reactions;
        this.nonce = packet.nonce;
        this.pinned = packet.pinned;
        this.webhookId = defineSnowflake(packet.webhook_id);
        this.type = packet.type;
        this.activity = packet.activity;
        this.application = packet.application;
        this.applicationId = defineSnowflake(packet.application_id);
        this.messageReference = packet.message_reference;
        this.flags = packet.flags;
        this.referencedMessage = packet.referenced_message;
        this.interaction = packet.interaction;
        this.thread = packet.thread;
        this.components = packet.components;
        this.stickerItems = packet.sticker_items;
        this.stickers = packet.stickers;
    }

    // You can tell if a message is generated by a webhook by checking for the webhook_id on the message object.
    // https://discord.com/developers/docs/resources/channel#message-object
    public fromWebhook(): boolean {
        return !(this.webhookId == null);
    }

    public reply(message: string) {
        // so i stop getting pinged about failed builds :3
        console.log(message);
    }
}
