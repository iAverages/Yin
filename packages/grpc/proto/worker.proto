syntax = "proto3";

package worker;

import "common.proto";
import "google/protobuf/any.proto";

service Worker {
  rpc handleMessageCreate(Message) returns (StatusReply);
  rpc handleInteraction(InteractionRequest) returns (StatusReply);
}

message Message { 
  string id = 1;
  string content = 2;
  string channel_id = 3;
  optional common.DiscordUser author = 4;
  string timestamp = 5;
  optional string webhook_id = 6;
}

message Packet {
  string body = 1;
}

message StatusReply {
  bool success = 1;
  optional string message = 2;
}

message InteractionRequest {
  string id = 1;
  string application_id = 2;
  int32 type = 3;
  InterationData data = 4;
  string userId = 5;
  optional string guildId = 6;
  optional string channelId = 7;
  string token = 8;
  common.GatewayServiceMeta gatewayMeta = 9;
}

enum ApplicationCommandOptionType {
  SUB_COMMAND = 0;
  SUB_COMMAND_GROUP = 1;
  STRING = 2;
  INTEGER = 3;
  BOOLEAN = 4;
  USER = 5;
  CHANNEL = 6;
  ROLE = 7;
  MENTIONABLE = 8;
  NUMBER = 9;
  ATTACHMENT = 10;
}

message ApplicationCommandOption {
  ApplicationCommandOptionType type = 1;   
  string name = 2;
  optional google.protobuf.Any value = 3;
  // repeated ApplicationCommandOption options = 4;
  optional string options = 4;
}

message InterationData {
  string id = 1; 
  string name = 2;
  int32 type = 3;
  // repeated ApplicationCommandOption options = 4;
  optional string options = 4;
}

message InterationResolvedData {
  map<string, common.DiscordUser> users = 1;
  map<string, PartialMember> members = 2;
}

message PartialMember {
  optional common.DiscordUser user = 1;
  optional string nick = 2;
  optional string avatar  = 3;
}

message InteractionResponse {
  string type = 1;
  string data = 2;
}

message WebsocketInfo {
  int32 ping = 1;
}
 